name: Build Android App

on:
  push:
    branches:
      - main  # Change this to your default branch if necessary
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Use the latest version of Python 3

      - name: Create build logs directory
        run: mkdir -p build_logs bin

      - name: Update and install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget unzip openjdk-17-jdk git
          
      - name: Setup Python environment
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install buildozer cython kivy

      - name: Download and setup Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
          unzip android-ndk-r27c-linux.zip
          echo "ANDROIDNDK=$GITHUB_WORKSPACE/android-ndk-r27c" >> $GITHUB_ENV

      - name: Create Buildozer config
        run: |
          mkdir -p ~/.buildozer
          echo "root = 1" >> ~/.buildozer/config.ini

      - name: Build APK
        run: |
          if buildozer android debug; then
            echo "Build succeeded. Copying APK to bin/..."
            cp .buildozer/android/platform/build-arm64-v8a/dists/*/build/outputs/apk/debug/*.apk bin/ || true
          else
            echo "Build failed. Saving logs."
            mkdir -p build_logs_chunks
            split -b 3M build_logs/build.log build_logs_chunks/build_log_part_
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: android-apk
          path: |
            bin/*.apk
            build_logs/*.log
            build_logs_chunks/*
