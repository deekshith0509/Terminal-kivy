name: Build Android App

on:
  push: {}

jobs:
  build_android_app:
    runs-on: ubuntu-latest
    steps:
      - name: Create build directories
        run: mkdir -p build_logs bin
      - name: Create empty build log file
        run: touch build_logs/build.log
      - name: Update and install dependencies
        run: |
          apt-get update
          apt-get install -y build-essential wget unzip python3 python3-pip openjdk-17-jdk git
          | tee build_logs/build.log
      - name: Setup Python environment
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install buildozer cython kivy
          | tee build_logs/build.log
      - name: Download and setup Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
          unzip android-ndk-r27c-linux.zip
          export ANDROIDNDK=${GITHUB_WORKSPACE}/android-ndk-r27c
          | tee build_logs/build.log
      - name: Create Buildozer config
        run: |
          mkdir -p ~/.buildozer
          echo "root = 1" >> ~/.buildozer/config.ini
      - name: Build APK and handle logs
        run: |
          if buildozer android debug; then
            echo "Build succeeded. Copying APK to bin/..."
            cp .buildozer/android/platform/build-arm64-v8a/dists/*/build/outputs/apk/debug/*.apk bin/ || true
          else
            echo "Build failed. Saving logs."
            mkdir -p build_logs_chunks
            split -b 3M build_logs/build.log build_logs_chunks/build_log_part_
          fi
        env:
          BUILD_LOG_PATH: build_logs/build.log
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            bin/*.apk
            build_logs/*.log
            build_logs_chunks/*
